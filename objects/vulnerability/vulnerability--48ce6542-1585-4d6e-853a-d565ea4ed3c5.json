{
    "type": "bundle",
    "id": "bundle--cbe3fd57-9fec-4e56-9db0-5c446c1ee211",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--48ce6542-1585-4d6e-853a-d565ea4ed3c5",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-05-02T00:22:05.786919Z",
            "modified": "2025-05-02T00:22:05.786919Z",
            "name": "CVE-2025-23158",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: venus: hfi: add check to handle incorrect queue size\n\nqsize represents size of shared queued between driver and video\nfirmware. Firmware can modify this value to an invalid large value. In\nsuch situation, empty_space will be bigger than the space actually\navailable. Since new_wr_idx is not checked, so the following code will\nresult in an OOB write.\n...\nqsize = qhdr->q_size\n\nif (wr_idx >= rd_idx)\n empty_space = qsize - (wr_idx - rd_idx)\n....\nif (new_wr_idx < qsize) {\n memcpy(wr_ptr, packet, dwords << 2) --> OOB write\n\nAdd check to ensure qsize is within the allocated size while\nreading and writing packets into the queue.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-23158"
                }
            ]
        }
    ]
}