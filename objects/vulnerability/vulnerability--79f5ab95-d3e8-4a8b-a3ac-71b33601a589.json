{
    "type": "bundle",
    "id": "bundle--ae7c5862-a483-4858-8659-320b0be60ee2",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--79f5ab95-d3e8-4a8b-a3ac-71b33601a589",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-03-07T00:20:32.187615Z",
            "modified": "2025-03-07T00:20:32.187615Z",
            "name": "CVE-2024-58085",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntomoyo: don't emit warning in tomoyo_write_control()\n\nsyzbot is reporting too large allocation warning at tomoyo_write_control(),\nfor one can write a very very long line without new line character. To fix\nthis warning, I use __GFP_NOWARN rather than checking for KMALLOC_MAX_SIZE,\nfor practically a valid line should be always shorter than 32KB where the\n\"too small to fail\" memory-allocation rule applies.\n\nOne might try to write a valid line that is longer than 32KB, but such\nrequest will likely fail with -ENOMEM. Therefore, I feel that separately\nreturning -EINVAL when a line is longer than KMALLOC_MAX_SIZE is redundant.\nThere is no need to distinguish over-32KB and over-KMALLOC_MAX_SIZE.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-58085"
                }
            ]
        }
    ]
}