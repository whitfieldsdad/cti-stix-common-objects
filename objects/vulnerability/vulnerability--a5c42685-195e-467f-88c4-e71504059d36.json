{
    "type": "bundle",
    "id": "bundle--14ce88c7-dfe5-4df1-bd57-580d57a44c33",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--a5c42685-195e-467f-88c4-e71504059d36",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-03-08T00:16:37.643831Z",
            "modified": "2025-03-08T00:16:37.643831Z",
            "name": "CVE-2025-21837",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring/uring_cmd: unconditionally copy SQEs at prep time\n\nThis isn't generally necessary, but conditions have been observed where\nSQE data is accessed from the original SQE after prep has been done and\noutside of the initial issue. Opcode prep handlers must ensure that any\nSQE related data is stable beyond the prep phase, but uring_cmd is a bit\nspecial in how it handles the SQE which makes it susceptible to reading\nstale data. If the application has reused the SQE before the original\ncompletes, then that can lead to data corruption.\n\nDown the line we can relax this again once uring_cmd has been sanitized\na bit, and avoid unnecessarily copying the SQE.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-21837"
                }
            ]
        }
    ]
}