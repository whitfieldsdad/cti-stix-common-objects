{
    "type": "bundle",
    "id": "bundle--5aac1eef-a39a-40d8-9913-c13a0857228a",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--c29cbca7-f77e-4125-8c42-5ff59be17fdf",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-05-14T00:22:45.577135Z",
            "modified": "2025-05-14T00:22:45.577135Z",
            "name": "CVE-2025-47278",
            "description": "Flask is a web server gateway interface (WSGI) web application framework. In Flask 3.1.0, the way fallback key configuration was handled resulted in the last fallback key being used for signing, rather than the current signing key. Signing is provided by the `itsdangerous` library. A list of keys can be passed, and it expects the last (top) key in the list to be the most recent key, and uses that for signing. Flask was incorrectly constructing that list in reverse, passing the signing key first. Sites that have opted-in to use key rotation by setting `SECRET_KEY_FALLBACKS` care likely to unexpectedly be signing their sessions with stale keys, and their transition to fresher keys will be impeded. Sessions are still signed, so this would not cause any sort of data integrity loss. Version 3.1.1 contains a patch for the issue.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-47278"
                }
            ]
        }
    ]
}