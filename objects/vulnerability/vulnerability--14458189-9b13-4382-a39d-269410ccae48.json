{
    "type": "bundle",
    "id": "bundle--2ec5f601-3f70-4f4d-b5a8-7e208c423dee",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--14458189-9b13-4382-a39d-269410ccae48",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-05-21T00:22:55.25958Z",
            "modified": "2025-05-21T00:22:55.25958Z",
            "name": "CVE-2025-37913",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: qfq: Fix double list add in class with netem as child qdisc\n\nAs described in Gerrard's report [1], there are use cases where a netem\nchild qdisc will make the parent qdisc's enqueue callback reentrant.\nIn the case of qfq, there won't be a UAF, but the code will add the same\nclassifier to the list twice, which will cause memory corruption.\n\nThis patch checks whether the class was already added to the agg->active\nlist (cl_is_active) before doing the addition to cater for the reentrant\ncase.\n\n[1] https://lore.kernel.org/netdev/CAHcdcOm+03OD2j6R0=YHKqmy=VgJ8xEOKuP6c7mSgnp-TEJJbw@mail.gmail.com/",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-37913"
                }
            ]
        }
    ]
}