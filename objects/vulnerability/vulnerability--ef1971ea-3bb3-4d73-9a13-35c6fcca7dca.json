{
    "type": "bundle",
    "id": "bundle--e2c8138a-65d6-4321-9f0c-2679cb6b98f0",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--ef1971ea-3bb3-4d73-9a13-35c6fcca7dca",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-04-04T00:20:55.395849Z",
            "modified": "2025-04-04T00:20:55.395849Z",
            "name": "CVE-2025-30370",
            "description": "jupyterlab-git is a JupyterLab extension for version control using Git. On many platforms, a third party can create a Git repository under a name that includes a shell command substitution string in the syntax $(<command>). These directory names are allowed in macOS and a majority of Linux distributions. If a user starts jupyter-lab in a parent directory of this inappropriately-named Git repository, opens it, and clicks \"Git > Open Git Repository in Terminal\" from the menu bar, then the injected command <command> is run in the user's shell without the user's permission. This issue is occurring because when that menu entry is clicked, jupyterlab-git opens the terminal and runs cd <git-repo-path> through the shell to set the current directory. Doing so runs any command substitution strings present in the directory name, which leads to the command injection issue described here. A previous patch provided an incomplete fix. This vulnerability is fixed in 0.51.1.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-30370"
                }
            ]
        }
    ]
}