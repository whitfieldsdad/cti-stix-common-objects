{
    "type": "bundle",
    "id": "bundle--2de57ddf-a3a6-4111-b5ef-2a6eba5659e9",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--b2100ec8-b993-4aec-a4cf-b9faad11f5da",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-02-28T00:20:01.41314Z",
            "modified": "2025-02-28T00:20:01.41314Z",
            "name": "CVE-2024-58009",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: L2CAP: handle NULL sock pointer in l2cap_sock_alloc\n\nA NULL sock pointer is passed into l2cap_sock_alloc() when it is called\nfrom l2cap_sock_new_connection_cb() and the error handling paths should\nalso be aware of it.\n\nSeemingly a more elegant solution would be to swap bt_sock_alloc() and\nl2cap_chan_create() calls since they are not interdependent to that moment\nbut then l2cap_chan_create() adds the soon to be deallocated and still\ndummy-initialized channel to the global list accessible by many L2CAP\npaths. The channel would be removed from the list in short period of time\nbut be a bit more straight-forward here and just check for NULL instead of\nchanging the order of function calls.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE static\nanalysis tool.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-58009"
                }
            ]
        }
    ]
}