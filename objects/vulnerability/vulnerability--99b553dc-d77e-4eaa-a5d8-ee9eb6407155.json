{
    "type": "bundle",
    "id": "bundle--336852c4-0818-4685-b27b-cd592dba4294",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--99b553dc-d77e-4eaa-a5d8-ee9eb6407155",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-11-08T00:19:19.137652Z",
            "modified": "2024-11-08T00:19:19.137652Z",
            "name": "CVE-2024-50142",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxfrm: validate new SA's prefixlen using SA family when sel.family is unset\n\nThis expands the validation introduced in commit 07bf7908950a (\"xfrm:\nValidate address prefix lengths in the xfrm selector.\")\n\nsyzbot created an SA with\n    usersa.sel.family = AF_UNSPEC\n    usersa.sel.prefixlen_s = 128\n    usersa.family = AF_INET\n\nBecause of the AF_UNSPEC selector, verify_newsa_info doesn't put\nlimits on prefixlen_{s,d}. But then copy_from_user_state sets\nx->sel.family to usersa.family (AF_INET). Do the same conversion in\nverify_newsa_info before validating prefixlen_{s,d}, since that's how\nprefixlen is going to be used later on.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-50142"
                }
            ]
        }
    ]
}