{
    "type": "bundle",
    "id": "bundle--1f208214-612c-4913-99ca-4e5600350747",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--777d9455-e6fe-4f5a-88e0-03460c83b647",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-05-08T00:22:16.285009Z",
            "modified": "2025-05-08T00:22:16.285009Z",
            "name": "CVE-2020-36791",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: keep alloc_hash updated after hash allocation\n\nIn commit 599be01ee567 (\"net_sched: fix an OOB access in cls_tcindex\")\nI moved cp->hash calculation before the first\ntcindex_alloc_perfect_hash(), but cp->alloc_hash is left untouched.\nThis difference could lead to another out of bound access.\n\ncp->alloc_hash should always be the size allocated, we should\nupdate it after this tcindex_alloc_perfect_hash().",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2020-36791"
                }
            ]
        }
    ]
}