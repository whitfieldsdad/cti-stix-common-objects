{
    "type": "bundle",
    "id": "bundle--a606cfdc-1668-4cf0-803f-8032a3642e1e",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--cef189d7-c9e1-434f-a70d-1fc50d722314",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-02-01T00:20:54.058346Z",
            "modified": "2025-02-01T00:20:54.058346Z",
            "name": "CVE-2025-21676",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: fec: handle page_pool_dev_alloc_pages error\n\nThe fec_enet_update_cbd function calls page_pool_dev_alloc_pages but did\nnot handle the case when it returned NULL. There was a WARN_ON(!new_page)\nbut it would still proceed to use the NULL pointer and then crash.\n\nThis case does seem somewhat rare but when the system is under memory\npressure it can happen. One case where I can duplicate this with some\nfrequency is when writing over a smbd share to a SATA HDD attached to an\nimx6q.\n\nSetting /proc/sys/vm/min_free_kbytes to higher values also seems to solve\nthe problem for my test case. But it still seems wrong that the fec driver\nignores the memory allocation error and can crash.\n\nThis commit handles the allocation error by dropping the current packet.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-21676"
                }
            ]
        }
    ]
}