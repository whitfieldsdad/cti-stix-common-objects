{
    "type": "bundle",
    "id": "bundle--3c258f5d-4ce9-4b6a-86bd-c88f5fe618ac",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--812621b7-d2ce-4b38-b4be-977afe4b2e76",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-05-09T00:22:23.790043Z",
            "modified": "2025-05-09T00:22:23.790043Z",
            "name": "CVE-2025-37804",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring: always do atomic put from iowq\n\nio_uring always switches requests to atomic refcounting for iowq\nexecution before there is any parallilism by setting REQ_F_REFCOUNT,\nand the flag is not cleared until the request completes. That should be\nfine as long as the compiler doesn't make up a non existing value for\nthe flags, however KCSAN still complains when the request owner changes\noter flag bits:\n\nBUG: KCSAN: data-race in io_req_task_cancel / io_wq_free_work\n...\nread to 0xffff888117207448 of 8 bytes by task 3871 on cpu 0:\n req_ref_put_and_test io_uring/refs.h:22 [inline]\n\nSkip REQ_F_REFCOUNT checks for iowq, we know it's set.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-37804"
                }
            ]
        }
    ]
}