{
    "type": "bundle",
    "id": "bundle--842b1cd5-e947-4ecd-8579-1ef9d787bbbd",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--b94a7730-57ad-4819-b025-9ec0954cb6c6",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-11-09T00:18:55.191778Z",
            "modified": "2024-11-09T00:18:55.191778Z",
            "name": "CVE-2024-50207",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nring-buffer: Fix reader locking when changing the sub buffer order\n\nThe function ring_buffer_subbuf_order_set() updates each\nring_buffer_per_cpu and installs new sub buffers that match the requested\npage order. This operation may be invoked concurrently with readers that\nrely on some of the modified data, such as the head bit (RB_PAGE_HEAD), or\nthe ring_buffer_per_cpu.pages and reader_page pointers. However, no\nexclusive access is acquired by ring_buffer_subbuf_order_set(). Modifying\nthe mentioned data while a reader also operates on them can then result in\nincorrect memory access and various crashes.\n\nFix the problem by taking the reader_lock when updating a specific\nring_buffer_per_cpu in ring_buffer_subbuf_order_set().",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-50207"
                }
            ]
        }
    ]
}